/**
 * APIDeIntegraOMercosLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Iten1
 */
class Iten1 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.produtoId = this.constructor.getValue(obj.produtoId || obj.produto_id);
        this.tabelaPrecoId = this.constructor.getValue(obj.tabelaPrecoId || obj.tabela_preco_id);
        this.quantidadeGrades =
          this.constructor.getValue(obj.quantidadeGrades
     || obj.quantidade_grades);
        this.precoBruto = this.constructor.getValue(obj.precoBruto || obj.preco_bruto);
        this.descontos = this.constructor.getValue(obj.descontos);
        this.precoLiquido = this.constructor.getValue(obj.precoLiquido || obj.preco_liquido);
        this.moeda = this.constructor.getValue(obj.moeda);
        this.cotacaoMoeda = this.constructor.getValue(obj.cotacaoMoeda || obj.cotacao_moeda);
        this.observacoes = this.constructor.getValue(obj.observacoes);
        this.ipi = this.constructor.getValue(obj.ipi);
        this.tipoIpi = this.constructor.getValue(obj.tipoIpi || obj.tipo_ipi);
        this.st = this.constructor.getValue(obj.st);
        this.precoMinimo = this.constructor.getValue(obj.precoMinimo || obj.preco_minimo);
        this.quantidade = this.constructor.getValue(obj.quantidade);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'produtoId', realName: 'produto_id' },
            { name: 'tabelaPrecoId', realName: 'tabela_preco_id' },
            {
                name: 'quantidadeGrades',
                realName: 'quantidade_grades',
                array: true,
                type: 'QuantidadeGrade',
            },
            { name: 'precoBruto', realName: 'preco_bruto' },
            { name: 'descontos', realName: 'descontos', array: true },
            { name: 'precoLiquido', realName: 'preco_liquido' },
            { name: 'moeda', realName: 'moeda' },
            { name: 'cotacaoMoeda', realName: 'cotacao_moeda' },
            { name: 'observacoes', realName: 'observacoes' },
            { name: 'ipi', realName: 'ipi' },
            { name: 'tipoIpi', realName: 'tipo_ipi' },
            { name: 'st', realName: 'st' },
            { name: 'precoMinimo', realName: 'preco_minimo' },
            { name: 'quantidade', realName: 'quantidade' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Iten1;
